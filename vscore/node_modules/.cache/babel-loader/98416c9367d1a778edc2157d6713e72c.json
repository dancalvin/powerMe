{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nexport default function MetaCalc(_ref) {\n  _s();\n  let {\n    age,\n    sex,\n    race,\n    feet,\n    inches,\n    heightUnit,\n    weight,\n    weightUnit,\n    pressure,\n    hdl,\n    trigl,\n    glucose,\n    newWeight,\n    newPressure,\n    newHdl,\n    newTrigl,\n    newGlucose,\n    setScoreStyle,\n    score,\n    a1c,\n    newA1c,\n    a1cPref,\n    newA1cPref,\n    diastolicBP,\n    newDiastolicBP,\n    waist,\n    newWaist,\n    typeFlag\n  } = _ref;\n  const [metaAgeData, setMetaAgeData] = useState(0);\n  useEffect(() => {\n    let baseNum = -82.688;\n    let wcNum = 0.779;\n    let cmConv = 2.54;\n    let mapperNumTwo = 0.227;\n    let fbsNum = 0.269;\n    let tgNum = 0.085;\n    let hdlNum = 0.481;\n    let ageNum = 0.538;\n    let mapperNumOne = 0.3333;\n    if (typeFlag === \"type1\") {\n      let mappedVar = parseFloat(newDiastolicBP) + parseFloat(mapperNumOne * (newPressure - newDiastolicBP));\n      let metaAgeTempVar = baseNum + wcNum * (newWaist * cmConv) + mapperNumTwo * mappedVar + fbsNum * newGlucose + tgNum * newTrigl - hdlNum * newHdl + ageNum * age;\n      setMetaAgeData(metaAgeTempVar.toFixed(0));\n    } else {\n      let mappedVar = parseFloat(diastolicBP) + parseFloat(mapperNumOne * (pressure - diastolicBP));\n      let metaAgeTempVar = baseNum + wcNum * (waist * cmConv) + mapperNumTwo * mappedVar + fbsNum * glucose + tgNum * trigl - hdlNum * hdl + ageNum * age;\n      setMetaAgeData(metaAgeTempVar.toFixed(0));\n    }\n  });\n  return metaAgeData;\n}\n_s(MetaCalc, \"j9FjNzo1RFTwF2RUhOpF4O8e6nI=\");\n_c = MetaCalc;\nvar _c;\n$RefreshReg$(_c, \"MetaCalc\");","map":{"version":3,"names":["React","useState","useEffect","MetaCalc","age","sex","race","feet","inches","heightUnit","weight","weightUnit","pressure","hdl","trigl","glucose","newWeight","newPressure","newHdl","newTrigl","newGlucose","setScoreStyle","score","a1c","newA1c","a1cPref","newA1cPref","diastolicBP","newDiastolicBP","waist","newWaist","typeFlag","metaAgeData","setMetaAgeData","baseNum","wcNum","cmConv","mapperNumTwo","fbsNum","tgNum","hdlNum","ageNum","mapperNumOne","mappedVar","parseFloat","metaAgeTempVar","toFixed"],"sources":["/home/sheraz/MyDrive/fiverPros/powerMe-dev/vscore/src/Components/Index/CircleModel/MetaCalc.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\n\nexport default function MetaCalc(\n{\n    age,\n    sex,\n    race,\n    feet,\n    inches,\n    heightUnit,\n    weight,\n    weightUnit,\n    pressure,\n    hdl,\n    trigl,\n    glucose,\n    newWeight,\n    newPressure,\n    newHdl,\n    newTrigl,\n    newGlucose,\n    setScoreStyle,\n    score,\n    a1c,\n    newA1c,\n    a1cPref,\n    newA1cPref,\n    diastolicBP, \n    newDiastolicBP,\n    waist,\n    newWaist,\n    typeFlag,\n}) \n{\n    const [metaAgeData, setMetaAgeData] = useState(0);\n    useEffect(() => \n    {\n        let baseNum = -82.688;\n        let wcNum = 0.779;\n        let cmConv = 2.54;\n        let mapperNumTwo = 0.227;\n        let fbsNum = 0.269;\n        let tgNum = 0.085;\n        let hdlNum = 0.481;\n        let ageNum = 0.538;\n        let mapperNumOne = 0.3333;\n\n        if(typeFlag === \"type1\")\n        {\n            let mappedVar = parseFloat(newDiastolicBP) + parseFloat(mapperNumOne*(newPressure -  newDiastolicBP));\n            let metaAgeTempVar = baseNum+(wcNum*(newWaist*cmConv))+(mapperNumTwo*mappedVar)+(fbsNum*newGlucose)+(tgNum*newTrigl)-(hdlNum*newHdl)+(ageNum*age);\n            setMetaAgeData(metaAgeTempVar.toFixed(0));\n        }\n        else\n        {\n            let mappedVar = parseFloat(diastolicBP) + parseFloat(mapperNumOne*(pressure -  diastolicBP));\n            let metaAgeTempVar = baseNum+(wcNum*(waist*cmConv))+(mapperNumTwo*mappedVar)+(fbsNum*glucose)+(tgNum*trigl)-(hdlNum*hdl)+(ageNum*age);\n            setMetaAgeData(metaAgeTempVar.toFixed(0));\n        }\n    });\n    return metaAgeData;\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,eAAe,SAASC,QAAQ,OA+BhC;EAAA;EAAA,IA9BA;IACIC,GAAG;IACHC,GAAG;IACHC,IAAI;IACJC,IAAI;IACJC,MAAM;IACNC,UAAU;IACVC,MAAM;IACNC,UAAU;IACVC,QAAQ;IACRC,GAAG;IACHC,KAAK;IACLC,OAAO;IACPC,SAAS;IACTC,WAAW;IACXC,MAAM;IACNC,QAAQ;IACRC,UAAU;IACVC,aAAa;IACbC,KAAK;IACLC,GAAG;IACHC,MAAM;IACNC,OAAO;IACPC,UAAU;IACVC,WAAW;IACXC,cAAc;IACdC,KAAK;IACLC,QAAQ;IACRC;EACJ,CAAC;EAEG,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGhC,QAAQ,CAAC,CAAC,CAAC;EACjDC,SAAS,CAAC,MACV;IACI,IAAIgC,OAAO,GAAG,CAAC,MAAM;IACrB,IAAIC,KAAK,GAAG,KAAK;IACjB,IAAIC,MAAM,GAAG,IAAI;IACjB,IAAIC,YAAY,GAAG,KAAK;IACxB,IAAIC,MAAM,GAAG,KAAK;IAClB,IAAIC,KAAK,GAAG,KAAK;IACjB,IAAIC,MAAM,GAAG,KAAK;IAClB,IAAIC,MAAM,GAAG,KAAK;IAClB,IAAIC,YAAY,GAAG,MAAM;IAEzB,IAAGX,QAAQ,KAAK,OAAO,EACvB;MACI,IAAIY,SAAS,GAAGC,UAAU,CAAChB,cAAc,CAAC,GAAGgB,UAAU,CAACF,YAAY,IAAEzB,WAAW,GAAIW,cAAc,CAAC,CAAC;MACrG,IAAIiB,cAAc,GAAGX,OAAO,GAAEC,KAAK,IAAEL,QAAQ,GAACM,MAAM,CAAE,GAAEC,YAAY,GAACM,SAAU,GAAEL,MAAM,GAAClB,UAAW,GAAEmB,KAAK,GAACpB,QAAS,GAAEqB,MAAM,GAACtB,MAAO,GAAEuB,MAAM,GAACrC,GAAI;MACjJ6B,cAAc,CAACY,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC,MAED;MACI,IAAIH,SAAS,GAAGC,UAAU,CAACjB,WAAW,CAAC,GAAGiB,UAAU,CAACF,YAAY,IAAE9B,QAAQ,GAAIe,WAAW,CAAC,CAAC;MAC5F,IAAIkB,cAAc,GAAGX,OAAO,GAAEC,KAAK,IAAEN,KAAK,GAACO,MAAM,CAAE,GAAEC,YAAY,GAACM,SAAU,GAAEL,MAAM,GAACvB,OAAQ,GAAEwB,KAAK,GAACzB,KAAM,GAAE0B,MAAM,GAAC3B,GAAI,GAAE4B,MAAM,GAACrC,GAAI;MACrI6B,cAAc,CAACY,cAAc,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC7C;EACJ,CAAC,CAAC;EACF,OAAOd,WAAW;AACtB;AAAC,GA3DuB7B,QAAQ;AAAA,KAARA,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module"}